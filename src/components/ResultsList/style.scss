/*
 * Define the widths: play around with these to get a best fit.
 */
$margin: 30px;
$textwidth: 180px;
$numwidth: 80px;

/*
  * Basic styles, good for a large display. Everything fits in
  * one row, no wrapping. All text based cells grow equally.
  */

// Main container: initialize the flex, direction is row, no wrapping. width 100%
.table-row {
  display: flex;
  display: -webkit-flex;
  flex-direction: row;
  -webkit-flex-direction: row;
  flex-wrap: no-wrap;
  -webkit-flex-wrap: no-wrap;
  width: 100%;
  padding-left: 15px;
  padding-right: 15px;
}

// Wrappers around cells and other wrappers: flex, row
.wrapper {
  display: flex;
  display: -webkit-flex;
  flex-direction: row;
  -webkit-flex-direction: row;
  flex-grow: 0;
  -webkit-flex-grow: 0;
}

// Text cells and wrappers: grow equally when there is extra space
.text-4,
.text-2,
.text {
  flex-grow: 1;
  -webkit-flex-grow: 1;
}

// Text cells: truncate and show ellipsis when not enough space
.text {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  padding-right: 20px;
}

// Fix the minimum width of the leaf level cells
.text {
  width: $textwidth;
}

.num {
  width: $numwidth;
  text-align: right;
}

/*
  * Media queries: optimize for different screen widths.
  */

// convenience mixin for setting wrapper styles vertical
@mixin vertcell {
  // Let the wrapper flex vertically, so we get 2 rows
  flex-direction: column;
  -webkit-flex-direction: column;

  // can't have the children grow, since this means vertical growth
  div {
    flex-grow: 0;
    -webkit-flex-grow: 0;
    // but let them grow horizontally, 100% to fill the wrapper
    width: 100%;
  }
}

// First break: when one row does not fit, make it 2 rows
@media all and (max-width: ($margin*2 + $textwidth*4 + $numwidth*4)) {

  // inner wrappers vertical
  .text-2,
  .num-2 {
    @include vertcell;
  }

  // fix the widths of the inner level wrappers, else they take
  // children's natural size
  .text-2 {
    width: $textwidth;
  }

  .num-2 {
    width: $numwidth;
  }
}

// Second break: when two rows is not enough, make it four
@media all and (max-width: ($margin*2 + $textwidth*2 + $numwidth*2)) {

  // Outer wrappers also vertical
  .text-4,
  .num-4 {
    @include vertcell;
  }

  // fix widths
  .text-4 {
    width: $textwidth;
  }

  .num-4 {
    width: $numwidth;
  }
}

// Final: collapse all of them into one single column
@media all and (max-width: ($margin*2 + $textwidth + $numwidth)) {

  // wrap the main row container
  .table-row {
    @include vertcell;
  }

  // force the num cells to left-align to look better
  .num {
    text-align: left;
  }
}

// /*
//   * General good-look styles, not mandatory.
//   */
// body {
//   font-size: 20px;
// }

// .table-row {
//   border-bottom: 2px solid #e0e0e0;
//   border-collapse: collapse;
//   padding-top: 5px;
// }

// .table-row.header {
//   background-color: #FFEEDB;
//   font-weight: bold;
//   padding-top: 8px;
//   padding-bottom: 8px;
// }